{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dekle\\\\Documents\\\\TechAssignments\\\\CreditCardValidate\\\\creditcardvalidate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport validator from 'validator';\nimport raw from './blacklistedCountries.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [errorMessageCardNumber, setErrorMessage] = useState('');\n  const [errorMessageCountry, setCountryErrorMessage] = useState('');\n  const [countrydisabled, setCountryDisabled] = useState(true);\n  const [buttondisabled, setButtonDisabled] = useState(true);\n\n  const validateCreditCard = value => {\n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅');\n      setCountryDisabled(false);\n    } else {\n      setErrorMessage('❌');\n      setCountryDisabled(true);\n    }\n  };\n\n  const validateCountry = value => {\n    fetch(raw).then(r => r.text()).then(text => {\n      var isBlackListed = true;\n      var blacklistedCountriesArray = text.split('\\n');\n      console.log(blacklistedCountriesArray[0].toString);\n\n      if (isBlackListed && value !== '') {\n        setCountryErrorMessage('✅');\n        setButtonDisabled(false);\n      } else {\n        setCountryErrorMessage('❌');\n        setButtonDisabled(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '100px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Validate and Save Credit Card below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Credit Card Number\",\n        onChange: e => validateCreditCard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCardNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: countrydisabled,\n        placeholder: \"Enter Country\",\n        type: \"text\",\n        onChange: e => validateCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCountry, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: buttondisabled,\n        id: \"saveButton\",\n        children: \"Save Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zlnCVh5jqbbvgiS6q4Q+jsTu9A8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/src/App.js"],"names":["React","useState","validator","raw","App","errorMessageCardNumber","setErrorMessage","errorMessageCountry","setCountryErrorMessage","countrydisabled","setCountryDisabled","buttondisabled","setButtonDisabled","validateCreditCard","value","isCreditCard","validateCountry","fetch","then","r","text","isBlackListed","blacklistedCountriesArray","split","console","log","toString","marginLeft","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport validator from 'validator';\nimport raw from './blacklistedCountries.txt';\n\n\nconst App = () => {\n  \n  const [errorMessageCardNumber, setErrorMessage] = useState('')\n  const [errorMessageCountry, setCountryErrorMessage] = useState('')\n\n  const [countrydisabled , setCountryDisabled] = useState(true) \n  const [buttondisabled , setButtonDisabled] = useState(true) \n\n  const validateCreditCard = (value) => {\n    \n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅')\n      setCountryDisabled(false)\n      \n    } else {\n      setErrorMessage('❌')\n      setCountryDisabled(true) \n    }\n  }\n\n  const validateCountry = (value) => {\n   fetch(raw).then(r => r.text()).then(text => {\n    var isBlackListed = true;\n    var blacklistedCountriesArray = text.split('\\n');\n    console.log(blacklistedCountriesArray[0].toString)\n    \n      if (isBlackListed && value !== '') {\n        setCountryErrorMessage('✅')\n        setButtonDisabled(false)\n      } else {\n        setCountryErrorMessage('❌')\n        setButtonDisabled(true) \n      }\n    });\n  }\n\n  return (\n    <div style={{\n      marginLeft: '100px',\n    }}>\n      <pre>\n        <h2>Validate and Save Credit Card below</h2>\n\n          <input type=\"text\" placeholder=\"Enter Credit Card Number\" onChange={(e)=> validateCreditCard(e.target.value)}></input>\n          <span>{errorMessageCardNumber}\n            <br />\n          </span>\n\n          <input disabled={countrydisabled} placeholder=\"Enter Country\" type=\"text\" onChange={(e)=> validateCountry(e.target.value)}></input>\n          <span>{errorMessageCountry}\n            <br />\n          </span>\n\n        <button disabled={buttondisabled} id='saveButton' >Save Information </button>\n      </pre>\n    </div>\n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}