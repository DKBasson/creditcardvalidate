{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dekle\\\\Documents\\\\TechAssignments\\\\CreditCardValidate\\\\creditcardvalidate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const fileUrl = 'blacklistedCountries.txt';\n  const blacklistedCountriesArray = [''];\n\n  function ValidateCountry(value) {\n    const req = new XMLHttpRequest();\n\n    req.onload = function () {\n      const text = req.responseText;\n      console.log(text);\n      blacklistedCountriesArray = text.split('\\n');\n\n      for (var i = 0; i < blacklistedCountriesArray.length; i++) {\n        blacklistedCountriesArray[i] = blacklistedCountriesArray[i].trim().toUpperCase();\n      }\n\n      console.log(blacklistedCountriesArray);\n\n      if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) === -1 && value !== '') {\n        setCountryErrorMessage('✅');\n        setButtonDisabled(false);\n      } else if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) !== -1) {\n        setCountryErrorMessage('❌ (Blacklisted Country)');\n        setButtonDisabled(true);\n      } else {\n        setCountryErrorMessage('❌');\n        setButtonDisabled(true);\n      }\n    };\n\n    req.open('GET', fileUrl);\n    req.send();\n  }\n\n  var sessioncreditCards = [];\n  const [errorMessageCardNumber, setErrorMessage] = useState('');\n  const [errorMessageCountry, setCountryErrorMessage] = useState('');\n  const [countrydisabled, setCountryDisabled] = useState(true);\n  const [buttondisabled, setButtonDisabled] = useState(true);\n\n  const validateCreditCard = value => {\n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅');\n      setCountryDisabled(false);\n    } else {\n      setErrorMessage('❌');\n      setCountryDisabled(true);\n    }\n  };\n\n  const runValidateCountry = value => {\n    ValidateCountry(value);\n  };\n\n  function handleClick(e) {\n    const creditCardNumber = document.getElementById('creditCardNumber').value;\n    e.preventDefault();\n\n    if (sessioncreditCards.length === 0) {\n      sessioncreditCards.push(creditCardNumber);\n    } else {\n      if (sessioncreditCards.indexOf(creditCardNumber.trim()) === -1) {\n        sessioncreditCards.push(creditCardNumber);\n      } else {\n        alert('The Credit Card number ' + creditCardNumber + ' already exists, please try a different one');\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Validate and Save Credit Card below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Credit Card Number\",\n        onChange: e => validateCreditCard(e.target.value),\n        id: \"creditCardNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCardNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: countrydisabled,\n        placeholder: \"Enter Country\",\n        type: \"text\",\n        onChange: e => runValidateCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCountry, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"save\",\n        disabled: buttondisabled,\n        id: \"saveButton\",\n        onClick: handleClick,\n        children: \"Save Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zlnCVh5jqbbvgiS6q4Q+jsTu9A8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/src/App.js"],"names":["React","useState","validator","App","fileUrl","blacklistedCountriesArray","ValidateCountry","value","req","XMLHttpRequest","onload","text","responseText","console","log","split","i","length","trim","toUpperCase","indexOf","setCountryErrorMessage","setButtonDisabled","open","send","sessioncreditCards","errorMessageCardNumber","setErrorMessage","errorMessageCountry","countrydisabled","setCountryDisabled","buttondisabled","validateCreditCard","isCreditCard","runValidateCountry","handleClick","e","creditCardNumber","document","getElementById","preventDefault","push","alert","display","justifyContent","alignItems","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport validator from 'validator';\n\n\nconst App = () => {\n\n  const fileUrl = 'blacklistedCountries.txt';\nconst blacklistedCountriesArray = [''];\n\n  function ValidateCountry(value) {        \n    const req = new XMLHttpRequest();    \n    req.onload = function() {\n        const text = req.responseText; \n        console.log(text) \n        blacklistedCountriesArray = text.split('\\n');\n        for (var i = 0; i < blacklistedCountriesArray.length; i++) {\n          blacklistedCountriesArray[i] = blacklistedCountriesArray[i].trim().toUpperCase();\n        } \n        console.log(blacklistedCountriesArray) \n        if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) === -1 && value !== '') {\n          setCountryErrorMessage('✅');\n          setButtonDisabled(false);\n        } else if(blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) !== -1){\n          setCountryErrorMessage('❌ (Blacklisted Country)');\n          setButtonDisabled(true); \n        }else {\n          setCountryErrorMessage('❌');\n          setButtonDisabled(true);\n        }\n    };    \n    req.open('GET', fileUrl);\n    req.send();\n}\n\n  var sessioncreditCards = [];\n  const [errorMessageCardNumber, setErrorMessage] = useState('');\n  const [errorMessageCountry, setCountryErrorMessage] = useState('');\n  const [countrydisabled , setCountryDisabled] = useState(true);\n  const [buttondisabled , setButtonDisabled] = useState(true);\n\n  const validateCreditCard = (value) => {\n    \n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅');\n      setCountryDisabled(false);\n      \n    } else {\n      setErrorMessage('❌');\n      setCountryDisabled(true);\n    }\n  }\n\n  const runValidateCountry = (value) => {\n    ValidateCountry(value);\n  }\n  function handleClick(e) {\n    const creditCardNumber = document.getElementById('creditCardNumber').value\n    e.preventDefault();\n    if(sessioncreditCards.length === 0){\n      sessioncreditCards.push(creditCardNumber);\n    }else{\n      if(sessioncreditCards.indexOf(creditCardNumber.trim()) === -1){\n        sessioncreditCards.push(creditCardNumber);\n      } else {\n        alert('The Credit Card number ' + creditCardNumber + ' already exists, please try a different one');\n      }\n    }\n    }\n  \n\n  return (\n    <div style={{\n      display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    }}>\n      <pre>\n        <h2>Validate and Save Credit Card below</h2>\n\n          <input type=\"text\" placeholder=\"Enter Credit Card Number\" onChange={(e)=> validateCreditCard(e.target.value)} id='creditCardNumber'></input>\n          <span>{errorMessageCardNumber}\n            <br />\n          </span>\n          <br />\n          <input disabled={countrydisabled} placeholder=\"Enter Country\" type=\"text\" onChange={(e)=> runValidateCountry(e.target.value)}></input>\n          <span>{errorMessageCountry}\n            <br />\n          </span>\n\n        <button type='save' disabled={buttondisabled} id='saveButton' onClick={handleClick} >Save Information</button>\n      </pre>\n    </div>\n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}