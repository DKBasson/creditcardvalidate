{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dekle\\\\Documents\\\\TechAssignments\\\\CreditCardValidate\\\\creditcardvalidate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [errorMessageCardNumber, setErrorMessage] = useState('');\n  const [errorMessageCountry, setCountryErrorMessage] = useState('');\n  const [countrydisabled, setCountryDisabled] = useState(true);\n  const [buttondisabled, setButtonDisabled] = useState(true);\n\n  const validateCreditCard = value => {\n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅');\n      setCountryDisabled(false);\n    } else {\n      setErrorMessage('❌');\n      setCountryDisabled(true);\n    }\n  };\n\n  const validateCountry = value => {\n    if (true) {\n      setCountryErrorMessage('✅');\n      setButtonDisabled(false);\n    } else {\n      setCountryErrorMessage('❌');\n      setButtonDisabled(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Validate and Save Credit Card below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Credit Card Number\",\n        onChange: e => validateCreditCard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessageCardNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: countrydisabled,\n        placeholder: \"Enter Country\",\n        type: \"text\",\n        onChange: event => {\n          this.setState({\n            query: event.target.value\n          });\n        },\n        onKeyPress: event => {\n          if (event.key === 'Enter') {\n            validateCountry(e => validateCreditCard(e.target.value));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errorMessageCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: buttondisabled,\n        id: \"saveButton\",\n        children: \"Save Information \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zlnCVh5jqbbvgiS6q4Q+jsTu9A8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/src/App.js"],"names":["React","useState","validator","App","errorMessageCardNumber","setErrorMessage","errorMessageCountry","setCountryErrorMessage","countrydisabled","setCountryDisabled","buttondisabled","setButtonDisabled","validateCreditCard","value","isCreditCard","validateCountry","marginLeft","e","target","event","setState","query","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,sBAAD,EAAyBC,eAAzB,IAA4CJ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDN,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAM,CAACO,eAAD,EAAmBC,kBAAnB,IAAyCR,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAACS,cAAD,EAAkBC,iBAAlB,IAAuCV,QAAQ,CAAC,IAAD,CAArD;;AAGA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAIX,SAAS,CAACY,YAAV,CAAuBD,KAAvB,CAAJ,EAAmC;AACjCR,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAI,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAED,KAJD,MAIO;AACLJ,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAI,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GAVD;;AAYA,QAAMM,eAAe,GAAIF,KAAD,IAAW;AAEjC,QAAI,IAAJ,EAAU;AACRN,MAAAA,sBAAsB,CAAC,GAAD,CAAtB;AACAI,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAED,KAJD,MAIO;AACLJ,MAAAA,sBAAsB,CAAC,GAAD,CAAtB;AACAI,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GAVD;;AAaA,sBACE;AAAK,IAAA,KAAK,EAAE;AACVK,MAAAA,UAAU,EAAE;AADF,KAAZ;AAAA,2BAGE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,0BAA/B;AAA0D,QAAA,QAAQ,EAAGC,CAAD,IAAML,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASL,KAAV;AAA5F;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAOT;AAAP;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,QAAQ,EAAEI,eAAjB;AAAkC,QAAA,WAAW,EAAC,eAA9C;AAA8D,QAAA,IAAI,EAAC,MAAnE;AAA8E,QAAA,QAAQ,EAAEW,KAAK,IAAI;AAAC,eAAKC,QAAL,CAAc;AAACC,YAAAA,KAAK,EAAEF,KAAK,CAACD,MAAN,CAAaL;AAArB,WAAd;AAA2C,SAA7I;AACN,QAAA,UAAU,EAAEM,KAAK,IAAI;AACT,cAAIA,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACzBP,YAAAA,eAAe,CAAEE,CAAD,IAAML,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASL,KAAV,CAAzB,CAAf;AACD;AACF;AALL;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI;AAAA,kBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,cAbJ,eAeE;AAAQ,QAAA,QAAQ,EAAEI,cAAlB;AAAkC,QAAA,EAAE,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzDD;;GAAMP,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport validator from 'validator';\n\nconst App = () => {\n  \n  const [errorMessageCardNumber, setErrorMessage] = useState('')\n  const [errorMessageCountry, setCountryErrorMessage] = useState('')\n\n  const [countrydisabled , setCountryDisabled] = useState(true) \n  const [buttondisabled , setButtonDisabled] = useState(true) \n\n\n  const validateCreditCard = (value) => {\n    \n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅')\n      setCountryDisabled(false)\n      \n    } else {\n      setErrorMessage('❌')\n      setCountryDisabled(true) \n    }\n  }\n\n  const validateCountry = (value) => {\n    \n    if (true) {\n      setCountryErrorMessage('✅')\n      setButtonDisabled(false)\n      \n    } else {\n      setCountryErrorMessage('❌')\n      setButtonDisabled(true) \n    }\n  }\n\n\n  return (\n    <div style={{\n      marginLeft: '200px',\n    }}>\n      <pre>\n        <h2>Validate and Save Credit Card below</h2>\n\n          <input type=\"text\" placeholder=\"Enter Credit Card Number\" onChange={(e)=> validateCreditCard(e.target.value)}></input>\n          <span>{errorMessageCardNumber}</span>\n          <br />\n          <input disabled={countrydisabled} placeholder=\"Enter Country\" type=\"text\"     onChange={event => {this.setState({query: event.target.value})}}\n    onKeyPress={event => {\n                if (event.key === 'Enter') {\n                  validateCountry((e)=> validateCreditCard(e.target.value));\n                }\n              }}></input>\n          <br />\n          <span>{errorMessageCountry}</span>\n\n        <button disabled={buttondisabled} id='saveButton' >Save Information </button>\n      </pre>\n    </div>\n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}