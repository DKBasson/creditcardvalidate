{"ast":null,"code":"'use strict';\n\nvar Promise = require('./promise-standin');\n\nfetch.isPony = true;\nmodule.exports = fetch;\n\nfunction fetch(url, opts) {\n  var r = new XMLHttpRequest();\n  r.open(opts.method, url);\n  Object.keys(opts.headers).forEach(function (key) {\n    r.setRequestHeader(key, opts.headers[key]);\n  });\n  var promise = new Promise();\n  r.addEventListener('readystatechange', function () {\n    if (r.readyState !== 4) return;\n    var code;\n    var message;\n    var body;\n\n    try {\n      code = r.status;\n    } catch (e) {\n      code = 0;\n    }\n\n    try {\n      message = r.statusText;\n    } catch (e) {}\n\n    try {\n      body = r.responseText;\n    } catch (e) {}\n\n    if (code === 0) return promise.settle(new TypeError('Connection trouble'), true);\n    promise.settle({\n      status: code,\n      statusText: message,\n      ok: code >= 200 && code < 300,\n      text: function () {\n        return new Promise().settle(body);\n      },\n      json: function () {\n        return new Promise().settle(JSON.parse(body));\n      },\n      headers: {\n        get: function (key) {\n          try {\n            return r.getResponseHeader(key);\n          } catch (e) {}\n        }\n      }\n    });\n  });\n  r.send(opts.body);\n  return promise;\n}","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/node_modules/pull-fetch-iso/src/fetch-browser-ponyfill.js"],"names":["Promise","require","fetch","isPony","module","exports","url","opts","r","XMLHttpRequest","open","method","Object","keys","headers","forEach","key","setRequestHeader","promise","addEventListener","readyState","code","message","body","status","e","statusText","responseText","settle","TypeError","ok","text","json","JSON","parse","get","getResponseHeader","send"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AAEAC,KAAK,CAACC,MAAN,GAAe,IAAf;AAEAC,MAAM,CAACC,OAAP,GAAiBH,KAAjB;;AAEA,SAASA,KAAT,CAAgBI,GAAhB,EAAqBC,IAArB,EAA2B;AAC1B,MAAIC,CAAC,GAAG,IAAIC,cAAJ,EAAR;AAEAD,EAAAA,CAAC,CAACE,IAAF,CAAOH,IAAI,CAACI,MAAZ,EAAoBL,GAApB;AAEAM,EAAAA,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACO,OAAjB,EAA0BC,OAA1B,CAAkC,UAAUC,GAAV,EAAe;AAChDR,IAAAA,CAAC,CAACS,gBAAF,CAAmBD,GAAnB,EAAwBT,IAAI,CAACO,OAAL,CAAaE,GAAb,CAAxB;AACA,GAFD;AAIA,MAAIE,OAAO,GAAG,IAAIlB,OAAJ,EAAd;AAEAQ,EAAAA,CAAC,CAACW,gBAAF,CAAmB,kBAAnB,EAAuC,YAAU;AAChD,QAAIX,CAAC,CAACY,UAAF,KAAiB,CAArB,EACC;AAED,QAAIC,IAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,IAAJ;;AAEA,QAAI;AAAEF,MAAAA,IAAI,GAAGb,CAAC,CAACgB,MAAT;AAAiB,KAAvB,CAAwB,OAAMC,CAAN,EAAS;AAAEJ,MAAAA,IAAI,GAAG,CAAP;AAAW;;AAC9C,QAAI;AAAEC,MAAAA,OAAO,GAAGd,CAAC,CAACkB,UAAZ;AAAwB,KAA9B,CAA+B,OAAMD,CAAN,EAAS,CAAE;;AAC1C,QAAI;AAAEF,MAAAA,IAAI,GAAGf,CAAC,CAACmB,YAAT;AAAwB,KAA9B,CAA+B,OAAMF,CAAN,EAAS,CAAE;;AAE1C,QAAIJ,IAAI,KAAK,CAAb,EACC,OAAOH,OAAO,CAACU,MAAR,CAAe,IAAIC,SAAJ,CAAc,oBAAd,CAAf,EAAoD,IAApD,CAAP;AAEDX,IAAAA,OAAO,CAACU,MAAR,CAAe;AACdJ,MAAAA,MAAM,EAAEH,IADM;AAEdK,MAAAA,UAAU,EAAEJ,OAFE;AAGdQ,MAAAA,EAAE,EAAET,IAAI,IAAI,GAAR,IAAeA,IAAI,GAAG,GAHZ;AAIdU,MAAAA,IAAI,EAAE,YAAU;AACf,eAAO,IAAI/B,OAAJ,GAAc4B,MAAd,CAAqBL,IAArB,CAAP;AACA,OANa;AAOdS,MAAAA,IAAI,EAAE,YAAU;AACf,eAAO,IAAIhC,OAAJ,GAAc4B,MAAd,CAAqBK,IAAI,CAACC,KAAL,CAAWX,IAAX,CAArB,CAAP;AACA,OATa;AAUdT,MAAAA,OAAO,EAAE;AACRqB,QAAAA,GAAG,EAAE,UAAUnB,GAAV,EAAe;AACnB,cAAI;AACH,mBAAOR,CAAC,CAAC4B,iBAAF,CAAoBpB,GAApB,CAAP;AACA,WAFD,CAEE,OAAMS,CAAN,EAAS,CAAE;AACb;AALO;AAVK,KAAf;AAkBA,GAjCD;AAmCAjB,EAAAA,CAAC,CAAC6B,IAAF,CAAO9B,IAAI,CAACgB,IAAZ;AAEA,SAAOL,OAAP;AACA","sourcesContent":["'use strict';\n\nvar Promise = require('./promise-standin');\n\nfetch.isPony = true;\n\nmodule.exports = fetch;\n\nfunction fetch( url, opts ){\n\tvar r = new XMLHttpRequest();\n\n\tr.open(opts.method, url);\n\n\tObject.keys(opts.headers).forEach(function( key ){\n\t\tr.setRequestHeader(key, opts.headers[key]);\n\t});\n\n\tvar promise = new Promise();\n\n\tr.addEventListener('readystatechange', function(){\n\t\tif (r.readyState !== 4)\n\t\t\treturn;\n\n\t\tvar code;\n\t\tvar message;\n\t\tvar body;\n\n\t\ttry { code = r.status } catch(e) { code = 0; }\n\t\ttry { message = r.statusText } catch(e) {}\n\t\ttry { body = r.responseText; } catch(e) {}\n\n\t\tif (code === 0)\n\t\t\treturn promise.settle(new TypeError('Connection trouble'), true);\n\n\t\tpromise.settle({\n\t\t\tstatus: code,\n\t\t\tstatusText: message,\n\t\t\tok: code >= 200 && code < 300,\n\t\t\ttext: function(){\n\t\t\t\treturn new Promise().settle(body);\n\t\t\t},\n\t\t\tjson: function(){\n\t\t\t\treturn new Promise().settle(JSON.parse(body));\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\tget: function( key ){\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn r.getResponseHeader(key);\n\t\t\t\t\t} catch(e) {}\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n\n\tr.send(opts.body);\n\n\treturn promise;\n}\n"]},"metadata":{},"sourceType":"script"}