{"ast":null,"code":"import _slicedToArray from\"C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import validator from'validator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var sessioncreditCards=[];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorMessageCardNumber=_useState2[0],setErrorMessage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessageCountry=_useState4[0],setCountryErrorMessage=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),countrydisabled=_useState6[0],setCountryDisabled=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),buttondisabled=_useState8[0],setButtonDisabled=_useState8[1];var validateCreditCard=function validateCreditCard(value){if(validator.isCreditCard(value)){setErrorMessage('✅');setCountryDisabled(false);}else{setErrorMessage('❌');setCountryDisabled(true);}};var validateCountry=function validateCountry(value){fetch('/blacklistedCountries.txt').then(function(r){return r.text();}).then(function(text){var blacklistedCountriesArray=text.split('\\n');for(var i=0;i<blacklistedCountriesArray.length;i++){blacklistedCountriesArray[i]=blacklistedCountriesArray[i].trim().toUpperCase();}if(blacklistedCountriesArray.indexOf(value.trim().toUpperCase())===-1&&value!==''){setCountryErrorMessage('✅');setButtonDisabled(false);}else if(blacklistedCountriesArray.indexOf(value.trim().toUpperCase())!==-1){setCountryErrorMessage('❌ (Blacklisted Country)');setButtonDisabled(true);}else{setCountryErrorMessage('❌');setButtonDisabled(true);}});};function handleClick(e){var creditCardNumber=document.getElementById('creditCardNumber').value;e.preventDefault();console.log('The link was clicked.');console.log(sessioncreditCards);if(sessioncreditCards.length===0){sessioncreditCards.push(creditCardNumber);}else{if(sessioncreditCards.indexOf(creditCardNumber.trim())===-1){sessioncreditCards.push(creditCardNumber);}else{alert('The Credit Card number '+creditCardNumber+' already exists, please try a different one');}}}return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsxs(\"pre\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Validate and Save Credit Card below\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Credit Card Number\",onChange:function onChange(e){return validateCreditCard(e.target.value);},id:\"creditCardNumber\"}),/*#__PURE__*/_jsxs(\"span\",{children:[errorMessageCardNumber,/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{disabled:countrydisabled,placeholder:\"Enter Country\",type:\"text\",onChange:function onChange(e){return validateCountry(e.target.value);}}),/*#__PURE__*/_jsxs(\"span\",{children:[errorMessageCountry,/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"button\",{type:\"save\",disabled:buttondisabled,id:\"saveButton\",onClick:handleClick,children:\"Save Information\"})]})});};export default App;","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/src/App.js"],"names":["React","useState","validator","App","sessioncreditCards","errorMessageCardNumber","setErrorMessage","errorMessageCountry","setCountryErrorMessage","countrydisabled","setCountryDisabled","buttondisabled","setButtonDisabled","validateCreditCard","value","isCreditCard","validateCountry","fetch","then","r","text","blacklistedCountriesArray","split","i","length","trim","toUpperCase","indexOf","handleClick","e","creditCardNumber","document","getElementById","preventDefault","console","log","push","alert","display","justifyContent","alignItems","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport validator from 'validator';\n\n\nconst App = () => {\n\n  var sessioncreditCards = []\n  const [errorMessageCardNumber, setErrorMessage] = useState('')\n  const [errorMessageCountry, setCountryErrorMessage] = useState('')\n\n  const [countrydisabled , setCountryDisabled] = useState(true) \n  const [buttondisabled , setButtonDisabled] = useState(true) \n\n  const validateCreditCard = (value) => {\n    \n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅')\n      setCountryDisabled(false)\n      \n    } else {\n      setErrorMessage('❌')\n      setCountryDisabled(true) \n    }\n  }\n\n  const validateCountry = (value) => {\n    fetch('/blacklistedCountries.txt')\n    .then((r) => r.text())\n    .then(text  => {\n    var blacklistedCountriesArray = text.split('\\n');\n    for (var i = 0; i < blacklistedCountriesArray.length; i++) {\n      blacklistedCountriesArray[i] = blacklistedCountriesArray[i].trim().toUpperCase()\n    } \n      if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) === -1 && value !== '') {\n        setCountryErrorMessage('✅')\n        setButtonDisabled(false)\n      } else if(blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) !== -1){\n        setCountryErrorMessage('❌ (Blacklisted Country)')\n        setButtonDisabled(true) \n      }else {\n        setCountryErrorMessage('❌')\n        setButtonDisabled(true) \n      }\n    }); \n  }\n  function handleClick(e) {\n    const creditCardNumber = document.getElementById('creditCardNumber').value\n\n\n    e.preventDefault();\n    console.log('The link was clicked.');\n    console.log(sessioncreditCards);\n\n    if(sessioncreditCards.length === 0){\n      sessioncreditCards.push(creditCardNumber);\n    }else{\n      if(sessioncreditCards.indexOf(creditCardNumber.trim()) === -1){\n        sessioncreditCards.push(creditCardNumber);\n      } else {\n        alert('The Credit Card number ' + creditCardNumber + ' already exists, please try a different one')\n      }\n    }\n    }\n  \n\n  return (\n    <div style={{\n      display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    }}>\n      <pre>\n        <h2>Validate and Save Credit Card below</h2>\n\n          <input type=\"text\" placeholder=\"Enter Credit Card Number\" onChange={(e)=> validateCreditCard(e.target.value)} id='creditCardNumber'></input>\n          <span>{errorMessageCardNumber}\n            <br />\n          </span>\n          <br />\n          <input disabled={countrydisabled} placeholder=\"Enter Country\" type=\"text\" onChange={(e)=> validateCountry(e.target.value)}></input>\n          <span>{errorMessageCountry}\n            <br />\n          </span>\n\n        <button type='save' disabled={buttondisabled} id='saveButton' onClick={handleClick} >Save Information</button>\n      </pre>\n    </div>\n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}