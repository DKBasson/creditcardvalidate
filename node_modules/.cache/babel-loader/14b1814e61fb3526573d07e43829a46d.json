{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dekle\\\\Documents\\\\TechAssignments\\\\CreditCardValidate\\\\creditcardvalidate\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport validator from 'validator';\nimport raw from './blacklistedCountries.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var sessioncreditCards = [];\n  const [errorMessageCardNumber, setErrorMessage] = useState('');\n  const [errorMessageCountry, setCountryErrorMessage] = useState('');\n  const [countrydisabled, setCountryDisabled] = useState(true);\n  const [buttondisabled, setButtonDisabled] = useState(true);\n\n  const validateCreditCard = value => {\n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅');\n      setCountryDisabled(false);\n    } else {\n      setErrorMessage('❌');\n      setCountryDisabled(true);\n    }\n  };\n\n  const validateCountry = value => {\n    fetch(raw).then(r => r.text()).then(text => {\n      var blacklistedCountriesArray = text.split('\\n');\n\n      for (var i = 0; i < blacklistedCountriesArray.length; i++) {\n        blacklistedCountriesArray[i] = blacklistedCountriesArray[i].trim().toUpperCase();\n      }\n\n      if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) === -1 && value !== '') {\n        setCountryErrorMessage('✅');\n        setButtonDisabled(false);\n      } else if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) !== -1) {\n        setCountryErrorMessage('❌ (Blacklisted Country)');\n        setButtonDisabled(true);\n      } else {\n        setCountryErrorMessage('❌');\n        setButtonDisabled(true);\n      }\n    });\n  };\n\n  function handleClick(e) {\n    const creditCardNumber = document.getElementById('creditCardNumber').value;\n    const creditCardHolders = document.getElementById('creditCardHolder').value;\n    e.preventDefault();\n    console.log('The link was clicked.');\n    console.log(sessioncreditCards.length);\n\n    if (sessioncreditCards.length === 0) {\n      sessioncreditCards.push(\"Card Number:\" + creditCardNumber + \"|| Card Holder Name: \" + creditCardHolders);\n    } else {\n      if (sessioncreditCards.indexOf(creditCardNumber.trim()) === -1) {\n        sessioncreditCards.push(creditCardNumber);\n      } else {\n        alert('The Credit Card number ' + creditCardNumber + ' already exists, please try a different one');\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '100px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Validate and Save Credit Card below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Card Holder Name\",\n        id: \"creditCardHolder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Credit Card Number\",\n        onChange: e => validateCreditCard(e.target.value),\n        id: \"creditCardNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCardNumber, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter CVV (3 Digits at the back of the card(Don't enter your actual ones))\",\n        id: \"creditCardHolder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Card Holder Name\",\n        id: \"creditCardHolder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Card Holder Name\",\n        id: \"creditCardHolder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 235\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: countrydisabled,\n        placeholder: \"Enter Country\",\n        type: \"text\",\n        onChange: e => validateCountry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [errorMessageCountry, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: buttondisabled,\n        id: \"saveButton\",\n        onClick: handleClick,\n        children: \"Save Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"zlnCVh5jqbbvgiS6q4Q+jsTu9A8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/dekle/Documents/TechAssignments/CreditCardValidate/creditcardvalidate/src/App.js"],"names":["React","useState","validator","raw","App","sessioncreditCards","errorMessageCardNumber","setErrorMessage","errorMessageCountry","setCountryErrorMessage","countrydisabled","setCountryDisabled","buttondisabled","setButtonDisabled","validateCreditCard","value","isCreditCard","validateCountry","fetch","then","r","text","blacklistedCountriesArray","split","i","length","trim","toUpperCase","indexOf","handleClick","e","creditCardNumber","document","getElementById","creditCardHolders","preventDefault","console","log","push","alert","marginLeft","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,MAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAM,CAACC,sBAAD,EAAyBC,eAAzB,IAA4CN,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,EAAD,CAA9D;AAEA,QAAM,CAACS,eAAD,EAAmBC,kBAAnB,IAAyCV,QAAQ,CAAC,IAAD,CAAvD;AACA,QAAM,CAACW,cAAD,EAAkBC,iBAAlB,IAAuCZ,QAAQ,CAAC,IAAD,CAArD;;AAEA,QAAMa,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAIb,SAAS,CAACc,YAAV,CAAuBD,KAAvB,CAAJ,EAAmC;AACjCR,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAI,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AAED,KAJD,MAIO;AACLJ,MAAAA,eAAe,CAAC,GAAD,CAAf;AACAI,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GAVD;;AAYA,QAAMM,eAAe,GAAIF,KAAD,IAAW;AAClCG,IAAAA,KAAK,CAACf,GAAD,CAAL,CAAWgB,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,EAA+BF,IAA/B,CAAoCE,IAAI,IAAI;AAC3C,UAAIC,yBAAyB,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAhC;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,yBAAyB,CAACG,MAA9C,EAAsDD,CAAC,EAAvD,EAA2D;AACzDF,QAAAA,yBAAyB,CAACE,CAAD,CAAzB,GAA+BF,yBAAyB,CAACE,CAAD,CAAzB,CAA6BE,IAA7B,GAAoCC,WAApC,EAA/B;AACD;;AACC,UAAIL,yBAAyB,CAACM,OAA1B,CAAkCb,KAAK,CAACW,IAAN,GAAaC,WAAb,EAAlC,MAAkE,CAAC,CAAnE,IAAwEZ,KAAK,KAAK,EAAtF,EAA0F;AACxFN,QAAAA,sBAAsB,CAAC,GAAD,CAAtB;AACAI,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHD,MAGO,IAAGS,yBAAyB,CAACM,OAA1B,CAAkCb,KAAK,CAACW,IAAN,GAAaC,WAAb,EAAlC,MAAkE,CAAC,CAAtE,EAAwE;AAC7ElB,QAAAA,sBAAsB,CAAC,yBAAD,CAAtB;AACAI,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,OAHM,MAGD;AACJJ,QAAAA,sBAAsB,CAAC,GAAD,CAAtB;AACAI,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,KAfF;AAgBA,GAjBD;;AAkBA,WAASgB,WAAT,CAAqBC,CAArB,EAAwB;AACtB,UAAMC,gBAAgB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4ClB,KAArE;AACA,UAAMmB,iBAAiB,GAAGF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4ClB,KAAtE;AACAe,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYhC,kBAAkB,CAACoB,MAA/B;;AAEA,QAAGpB,kBAAkB,CAACoB,MAAnB,KAA8B,CAAjC,EAAmC;AACjCpB,MAAAA,kBAAkB,CAACiC,IAAnB,CAAwB,iBAAiBP,gBAAjB,GAAoC,uBAApC,GAA8DG,iBAAtF;AACD,KAFD,MAEK;AACH,UAAG7B,kBAAkB,CAACuB,OAAnB,CAA2BG,gBAAgB,CAACL,IAAjB,EAA3B,MAAwD,CAAC,CAA5D,EAA8D;AAC5DrB,QAAAA,kBAAkB,CAACiC,IAAnB,CAAwBP,gBAAxB;AACD,OAFD,MAEO;AACLQ,QAAAA,KAAK,CAAC,4BAA4BR,gBAA5B,GAA+C,6CAAhD,CAAL;AACD;AACF;AACA;;AAGH,sBACE;AAAK,IAAA,KAAK,EAAE;AACVS,MAAAA,UAAU,EAAE;AADF,KAAZ;AAAA,2BAGE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,wBAA/B;AAAwD,QAAA,EAAE,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,0BAA/B;AAA0D,QAAA,QAAQ,EAAGV,CAAD,IAAMhB,kBAAkB,CAACgB,CAAC,CAACW,MAAF,CAAS1B,KAAV,CAA5F;AAA8G,QAAA,EAAE,EAAC;AAAjH;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,mBAAOT,sBAAP,eACE;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,4EAA/B;AAA4G,QAAA,EAAE,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,cATJ,eAS8I;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,wBAA/B;AAAwD,QAAA,EAAE,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAT9I,eASoO;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,wBAA/B;AAAwD,QAAA,EAAE,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cATpO,eAUI;AAAO,QAAA,QAAQ,EAAEI,eAAjB;AAAkC,QAAA,WAAW,EAAC,eAA9C;AAA8D,QAAA,IAAI,EAAC,MAAnE;AAA0E,QAAA,QAAQ,EAAGoB,CAAD,IAAMb,eAAe,CAACa,CAAC,CAACW,MAAF,CAAS1B,KAAV;AAAzG;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAA,mBAAOP,mBAAP,eACE;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAeE;AAAQ,QAAA,QAAQ,EAAEI,cAAlB;AAAkC,QAAA,EAAE,EAAC,YAArC;AAAkD,QAAA,OAAO,EAAEiB,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAjFD;;GAAMzB,G;;KAAAA,G;AAkFN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport validator from 'validator';\nimport raw from './blacklistedCountries.txt';\n\n\nconst App = () => {\n\n  var sessioncreditCards = []\n  const [errorMessageCardNumber, setErrorMessage] = useState('')\n  const [errorMessageCountry, setCountryErrorMessage] = useState('')\n\n  const [countrydisabled , setCountryDisabled] = useState(true) \n  const [buttondisabled , setButtonDisabled] = useState(true) \n\n  const validateCreditCard = (value) => {\n    \n    if (validator.isCreditCard(value)) {\n      setErrorMessage('✅')\n      setCountryDisabled(false)\n      \n    } else {\n      setErrorMessage('❌')\n      setCountryDisabled(true) \n    }\n  }\n\n  const validateCountry = (value) => {\n   fetch(raw).then(r => r.text()).then(text => {\n    var blacklistedCountriesArray = text.split('\\n');\n    for (var i = 0; i < blacklistedCountriesArray.length; i++) {\n      blacklistedCountriesArray[i] = blacklistedCountriesArray[i].trim().toUpperCase()\n    } \n      if (blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) === -1 && value !== '') {\n        setCountryErrorMessage('✅')\n        setButtonDisabled(false)\n      } else if(blacklistedCountriesArray.indexOf(value.trim().toUpperCase()) !== -1){\n        setCountryErrorMessage('❌ (Blacklisted Country)')\n        setButtonDisabled(true) \n      }else {\n        setCountryErrorMessage('❌')\n        setButtonDisabled(true) \n      }\n    }); \n  }\n  function handleClick(e) {\n    const creditCardNumber = document.getElementById('creditCardNumber').value\n    const creditCardHolders = document.getElementById('creditCardHolder').value\n    e.preventDefault();\n    console.log('The link was clicked.');\n    console.log(sessioncreditCards.length);\n\n    if(sessioncreditCards.length === 0){\n      sessioncreditCards.push(\"Card Number:\" + creditCardNumber + \"|| Card Holder Name: \" + creditCardHolders);\n    }else{\n      if(sessioncreditCards.indexOf(creditCardNumber.trim()) === -1){\n        sessioncreditCards.push(creditCardNumber);\n      } else {\n        alert('The Credit Card number ' + creditCardNumber + ' already exists, please try a different one')\n      }\n    }\n    }\n  \n\n  return (\n    <div style={{\n      marginLeft: '100px',\n    }}>\n      <pre>\n        <h2>Validate and Save Credit Card below</h2>\n\n        <input type=\"text\" placeholder=\"Enter Card Holder Name\" id='creditCardHolder'></input>\n        <br />\n          <input type=\"text\" placeholder=\"Enter Credit Card Number\" onChange={(e)=> validateCreditCard(e.target.value)} id='creditCardNumber'></input>\n          <span>{errorMessageCardNumber}\n            <br />\n          </span>\n          <input type=\"text\" placeholder=\"Enter CVV (3 Digits at the back of the card(Don't enter your actual ones))\" id='creditCardHolder'></input><input type=\"text\" placeholder=\"Enter Card Holder Name\" id='creditCardHolder'></input><input type=\"text\" placeholder=\"Enter Card Holder Name\" id='creditCardHolder'></input>\n          <input disabled={countrydisabled} placeholder=\"Enter Country\" type=\"text\" onChange={(e)=> validateCountry(e.target.value)}></input>\n          <span>{errorMessageCountry}\n            <br />\n          </span>\n\n        <button disabled={buttondisabled} id='saveButton' onClick={handleClick} >Save Information</button>\n      </pre>\n    </div>\n  );\n}\nexport default App"]},"metadata":{},"sourceType":"module"}